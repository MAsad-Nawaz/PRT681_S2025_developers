@page "/"
@using Microsoft.EntityFrameworkCore
@using MovieTheater.Models
@inject IDbContextFactory<DataContext> DbFactory
@rendermode InteractiveServer

<PageTitle>MovieTheater - Home</PageTitle>

<!-- Hero Section -->
<div class="hero min-h-96 bg-gradient-to-r from-primary to-secondary">
    <div class="hero-content text-center text-primary-content">
        <div class="max-w-md">
            <h1 class="mb-5 text-5xl font-bold">MovieTheater</h1>
            <p class="mb-5 text-lg">Discover amazing movies, explore different categories, and manage your favorite films all in one place.</p>
            <a href="/movies" class="btn btn-accent btn-lg">Browse Movies</a>
        </div>
    </div>
</div>

<!-- Stats Section -->
<div class="stats shadow w-full">
    <div class="stat">
        <div class="stat-figure text-primary">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-8 h-8 stroke-current">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V5a1 1 0 011-1h4z"></path>
            </svg>
        </div>
        <div class="stat-title">Total Movies</div>
        <div class="stat-value text-primary">@totalMovies</div>
        <div class="stat-desc">Movies in collection</div>
    </div>
    
    <div class="stat">
        <div class="stat-figure text-secondary">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-8 h-8 stroke-current">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14-7H5a2 2 0 00-2 2v12a2 2 0 002 2h14a2 2 0 002-2V6a2 2 0 00-2-2z"></path>
            </svg>
        </div>
        <div class="stat-title">Categories</div>
        <div class="stat-value text-secondary">@totalCategories</div>
        <div class="stat-desc">Different genres</div>
    </div>
    
    <div class="stat">
        <div class="stat-figure text-accent">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-8 h-8 stroke-current">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
        </div>
        <div class="stat-title">Latest</div>
        <div class="stat-value text-accent">@newMoviesCount</div>
        <div class="stat-desc">New this month</div>
    </div>
</div>

<!-- Main Content -->
<div class="container mx-auto px-4 py-8">
    
    <!-- New Movies Section -->
    <section class="mb-12">
        <div class="flex items-center justify-between mb-6">
            <h2 class="text-3xl font-bold">🆕 New Movies</h2>
            <a href="/movies" class="btn btn-outline btn-sm">View All</a>
        </div>
        
        @if (newMovies.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                @foreach (var movie in newMovies)
                {
                    <div class="card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300">
                        <figure class="px-4 pt-4">
                            @if (!string.IsNullOrEmpty(movie.PosterPath))
                            {
                                <img src="@movie.PosterPath" alt="@movie.Name" class="rounded-xl h-64 w-full object-cover" />
                            }
                            else
                            {
                                <div class="bg-base-200 rounded-xl h-64 w-full flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-base-content/40" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V5a1 1 0 011-1h4z"></path>
                                    </svg>
                                </div>
                            }
                        </figure>
                        <div class="card-body">
                            <h3 class="card-title text-lg">@movie.Name</h3>
                            <p class="text-sm text-base-content/70">@movie.Director</p>
                            <div class="flex items-center gap-2 mt-2">
                                <span class="badge badge-outline badge-sm">@movie.Language</span>
                                <span class="badge badge-primary badge-sm">@(GetCategoryName(movie.CategoryId))</span>
                            </div>
                            <div class="card-actions justify-end mt-4">
                                <a href="/movies/details?id=@movie.Id" class="btn btn-primary btn-sm">View Details</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <p class="text-base-content/60">No new movies available. <a href="/movies/create" class="link link-primary">Add the first movie!</a></p>
            </div>
        }
    </section>

    <!-- Categories Section -->
    <section class="mb-12">
        <div class="flex items-center justify-between mb-6">
            <h2 class="text-3xl font-bold">🎭 Categories</h2>
            <a href="/categories" class="btn btn-outline btn-sm">View All</a>
        </div>
        
        @if (categories.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                @foreach (var category in categories)
                {
                    <div class="card bg-gradient-to-br from-primary/10 to-secondary/10 shadow-lg hover:shadow-xl transition-shadow duration-300">
                        <div class="card-body">
                            <h3 class="card-title text-xl">@category.Name</h3>
                            <p class="text-sm text-base-content/70 mb-2">Code: @category.Code</p>
                            <p class="text-sm">@GetMovieCountForCategory(category.Id) movies</p>
                            <div class="card-actions justify-end mt-4">
                                <a href="/categories/details?id=@category.Id" class="btn btn-outline btn-sm">View Movies</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <p class="text-base-content/60">No categories available. <a href="/categories/create" class="link link-primary">Create the first category!</a></p>
            </div>
        }
    </section>

    <!-- Quick Actions -->
    <section class="text-center">
        <h2 class="text-3xl font-bold mb-6">⚡ Quick Actions</h2>
        <div class="flex flex-wrap justify-center gap-4">
            <a href="/movies/create" class="btn btn-primary btn-lg">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
                Add New Movie
            </a>
            <a href="/categories/create" class="btn btn-secondary btn-lg">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
                Add New Category
            </a>
        </div>
    </section>
</div>

@code {
    private List<Movie> newMovies = new();
    private List<Category> categories = new();
    private int totalMovies = 0;
    private int totalCategories = 0;
    private int newMoviesCount = 0;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        
        // Get all movies and categories
        var allMovies = await context.Movie.ToListAsync();
        categories = await context.Category.ToListAsync();
        
        // Calculate stats
        totalMovies = allMovies.Count;
        totalCategories = categories.Count;
        
        // Get new movies (last 30 days)
        var thirtyDaysAgo = DateTime.Now.AddDays(-30);
        newMovies = allMovies
            .Where(m => m.ReleaseDate >= thirtyDaysAgo)
            .OrderByDescending(m => m.ReleaseDate)
            .Take(8)
            .ToList();
        
        newMoviesCount = newMovies.Count;
        
        // If no recent movies, show latest 4 movies
        if (!newMovies.Any())
        {
            newMovies = allMovies
                .OrderByDescending(m => m.ReleaseDate)
                .Take(4)
                .ToList();
        }
    }

    private string GetCategoryName(int categoryId)
    {
        return categories.FirstOrDefault(c => c.Id == categoryId)?.Name ?? "Unknown";
    }

    private int GetMovieCountForCategory(int categoryId)
    {
        using var context = DbFactory.CreateDbContext();
        return context.Movie.Count(m => m.CategoryId == categoryId);
    }
}
