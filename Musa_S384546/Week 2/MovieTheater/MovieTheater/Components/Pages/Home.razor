@page "/"
@using Microsoft.EntityFrameworkCore
@using MovieTheater.Models
@inject IDbContextFactory<DataContext> DbFactory
@rendermode InteractiveServer

<PageTitle>MovieTheater - Home</PageTitle>

<!-- Hero Section -->
<div class="relative overflow-hidden">
    <!-- Background Pattern -->
    <div class="absolute inset-0 bg-gradient-to-br from-primary via-secondary to-accent opacity-90"></div>
    <div class="absolute inset-0" style="background-image: radial-gradient(circle at 25% 25%, rgba(255,255,255,0.1) 0%, transparent 50%), radial-gradient(circle at 75% 75%, rgba(255,255,255,0.1) 0%, transparent 50%);"></div>
    
    <div class="relative hero min-h-screen">
        <div class="hero-content text-center text-primary-content max-w-4xl">
            <div class="space-y-8">
                <!-- Main Title with Animation -->
                <div class="space-y-4">
                    <div class="flex items-center justify-center gap-4 mb-6">
                        <div class="w-16 h-16 bg-primary-content/20 rounded-full flex items-center justify-center backdrop-blur-sm">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V5a1 1 0 011-1h4z"></path>
                            </svg>
                        </div>
                    </div>
                    <h1 class="text-6xl md:text-7xl font-bold bg-gradient-to-r from-white to-primary-content/80 bg-clip-text text-transparent">
                        MovieTheater
                    </h1>
                    <div class="w-24 h-1 bg-accent mx-auto rounded-full"></div>
                </div>
                
                <!-- Subtitle -->
                <p class="text-xl md:text-2xl text-primary-content/90 max-w-2xl mx-auto leading-relaxed">
                    Your ultimate destination for discovering, organizing, and managing your movie collection with style and elegance.
                </p>
                
                <!-- CTA Buttons -->
                <div class="flex flex-col sm:flex-row gap-4 justify-center items-center pt-8">
                    <a href="/movies" class="btn btn-accent btn-lg text-accent-content hover:scale-105 transition-transform duration-300 shadow-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                        Explore Movies
                    </a>
                    <a href="/movies/create" class="btn btn-outline btn-lg text-primary-content border-primary-content hover:bg-primary-content hover:text-primary hover:scale-105 transition-all duration-300">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                        </svg>
                        Add New Movie
                    </a>
                </div>
                
                <!-- Floating Elements -->
                <div class="absolute top-20 left-10 w-4 h-4 bg-accent/30 rounded-full animate-pulse"></div>
                <div class="absolute top-40 right-20 w-6 h-6 bg-secondary/30 rounded-full animate-pulse" style="animation-delay: 1s;"></div>
                <div class="absolute bottom-32 left-20 w-3 h-3 bg-primary-content/30 rounded-full animate-pulse" style="animation-delay: 2s;"></div>
            </div>
        </div>
    </div>
</div>

<!-- Enhanced Stats Section -->
<div class="relative -mt-16 z-10">
    <div class="container mx-auto px-4">
        <div class="stats stats-vertical lg:stats-horizontal shadow-2xl bg-base-100 w-full rounded-2xl border border-base-300">
            <div class="stat place-items-center">
                <div class="stat-figure text-primary">
                    <div class="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-8 h-8 stroke-current">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V5a1 1 0 011-1h4z"></path>
                        </svg>
                    </div>
                </div>
                <div class="stat-title text-base-content/70">Total Movies</div>
                <div class="stat-value text-primary text-4xl font-bold">@totalMovies</div>
                <div class="stat-desc text-base-content/60">in your collection</div>
            </div>
            
            <div class="stat place-items-center">
                <div class="stat-figure text-secondary">
                    <div class="w-16 h-16 bg-secondary/10 rounded-full flex items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-8 h-8 stroke-current">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14-7H5a2 2 0 00-2 2v12a2 2 0 002 2h14a2 2 0 002-2V6a2 2 0 00-2-2z"></path>
                        </svg>
                    </div>
                </div>
                <div class="stat-title text-base-content/70">Categories</div>
                <div class="stat-value text-secondary text-4xl font-bold">@totalCategories</div>
                <div class="stat-desc text-base-content/60">different genres</div>
            </div>
            
            <div class="stat place-items-center">
                <div class="stat-figure text-accent">
                    <div class="w-16 h-16 bg-accent/10 rounded-full flex items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-8 h-8 stroke-current">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                        </svg>
                    </div>
                </div>
                <div class="stat-title text-base-content/70">New Releases</div>
                <div class="stat-value text-accent text-4xl font-bold">@newMoviesCount</div>
                <div class="stat-desc text-base-content/60">this month</div>
            </div>
        </div>
    </div>
</div>

<!-- Main Content -->
<div class="container mx-auto px-4 py-16">
    
    <!-- New Movies Section -->
    <section class="mb-20">
        <div class="flex items-center justify-between mb-8">
            <div>
                <h2 class="text-4xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">🆕 New Movies</h2>
                <p class="text-base-content/70 mt-2">Discover the latest additions to your collection</p>
            </div>
            <a href="/movies" class="btn btn-outline hover:scale-105 transition-transform duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
                View All
            </a>
        </div>
        
        @if (newMovies.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                @foreach (var movie in newMovies)
                {
                    <div class="group card bg-base-100 shadow-xl hover:shadow-2xl transition-all duration-500 hover:-translate-y-2 border border-base-300/50">
                        <figure class="px-4 pt-4 relative overflow-hidden">
                            @if (!string.IsNullOrEmpty(movie.PosterPath))
                            {
                                <img src="@movie.PosterPath" alt="@movie.Name" class="rounded-xl h-72 w-full object-cover group-hover:scale-105 transition-transform duration-500" />
                                <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl"></div>
                            }
                            else
                            {
                                <div class="bg-gradient-to-br from-base-200 to-base-300 rounded-xl h-72 w-full flex items-center justify-center group-hover:from-primary/10 group-hover:to-secondary/10 transition-colors duration-300">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-20 w-20 text-base-content/40 group-hover:text-primary/60 transition-colors duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V5a1 1 0 011-1h4z"></path>
                                    </svg>
                                </div>
                            }
                        </figure>
                        <div class="card-body">
                            <h3 class="card-title text-lg font-bold group-hover:text-primary transition-colors duration-300">@movie.Name</h3>
                            <p class="text-sm text-base-content/70 mb-3">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 inline mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                                @movie.Director
                            </p>
                            <div class="flex items-center gap-2 mb-4">
                                <span class="badge badge-outline badge-sm hover:badge-primary transition-colors duration-300">@movie.Language</span>
                                <span class="badge badge-primary badge-sm">@(GetCategoryName(movie.CategoryId))</span>
                            </div>
                            <div class="card-actions justify-end">
                                <a href="/movies/details?id=@movie.Id" class="btn btn-primary btn-sm hover:scale-105 transition-transform duration-300">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                    </svg>
                                    View Details
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-16">
                <div class="w-24 h-24 bg-base-200 rounded-full flex items-center justify-center mx-auto mb-6">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-base-content/40" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V5a1 1 0 011-1h4z"></path>
                    </svg>
                </div>
                <p class="text-xl text-base-content/60 mb-4">No new movies available</p>
                <a href="/movies/create" class="btn btn-primary btn-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                    Add the first movie!
                </a>
            </div>
        }
    </section>

    <!-- Categories Section -->
    <section class="mb-20">
        <div class="flex items-center justify-between mb-8">
            <div>
                <h2 class="text-4xl font-bold bg-gradient-to-r from-secondary to-accent bg-clip-text text-transparent">🎭 Categories</h2>
                <p class="text-base-content/70 mt-2">Explore movies by genre and category</p>
            </div>
            <a href="/categories" class="btn btn-outline hover:scale-105 transition-transform duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
                View All
            </a>
        </div>
        
        @if (categories.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                @foreach (var category in categories)
                {
                    <div class="group card bg-gradient-to-br from-primary/5 via-secondary/5 to-accent/5 shadow-lg hover:shadow-2xl transition-all duration-500 hover:-translate-y-1 border border-primary/10">
                        <div class="card-body">
                            <div class="flex items-center gap-4 mb-4">
                                <div class="avatar placeholder">
                                    <div class="bg-gradient-to-br from-primary to-secondary text-primary-content rounded-full w-12 h-12 group-hover:scale-110 transition-transform duration-300">
                                        <span class="text-lg font-bold">@category.Code.Substring(0, Math.Min(2, category.Code.Length)).ToUpper()</span>
                                    </div>
                                </div>
                                <div>
                                    <h3 class="card-title text-xl group-hover:text-primary transition-colors duration-300">@category.Name</h3>
                                    <p class="text-sm text-base-content/70">Code: @category.Code</p>
                                </div>
                            </div>
                            <div class="flex items-center gap-2 mb-4">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-base-content/60" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V5a1 1 0 011-1h4z"></path>
                                </svg>
                                <span class="text-sm font-medium">@GetMovieCountForCategory(category.Id) movies</span>
                            </div>
                            <div class="card-actions justify-end">
                                <a href="/categories/details?id=@category.Id" class="btn btn-outline btn-sm hover:btn-primary hover:scale-105 transition-all duration-300">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                                    </svg>
                                    View Movies
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-16">
                <div class="w-24 h-24 bg-base-200 rounded-full flex items-center justify-center mx-auto mb-6">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-base-content/40" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14-7H5a2 2 0 00-2 2v12a2 2 0 002 2h14a2 2 0 002-2V6a2 2 0 00-2-2z"></path>
                    </svg>
                </div>
                <p class="text-xl text-base-content/60 mb-4">No categories available</p>
                <a href="/categories/create" class="btn btn-secondary btn-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                    Create the first category!
                </a>
            </div>
        }
    </section>

    <!-- Quick Actions -->
    <section class="text-center bg-gradient-to-r from-primary/5 to-secondary/5 rounded-3xl p-12">
        <div class="max-w-2xl mx-auto">
            <h2 class="text-4xl font-bold mb-4">⚡ Quick Actions</h2>
            <p class="text-base-content/70 mb-8 text-lg">Get started with managing your movie collection</p>
            <div class="flex flex-wrap justify-center gap-6">
                <a href="/movies/create" class="btn btn-primary btn-lg hover:scale-105 transition-transform duration-300 shadow-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                    Add New Movie
                </a>
                <a href="/categories/create" class="btn btn-secondary btn-lg hover:scale-105 transition-transform duration-300 shadow-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14-7H5a2 2 0 00-2 2v12a2 2 0 002 2h14a2 2 0 002-2V6a2 2 0 00-2-2z"></path>
                    </svg>
                    Add New Category
                </a>
            </div>
        </div>
    </section>
</div>

@code {
    private List<Movie> newMovies = new();
    private List<Category> categories = new();
    private int totalMovies = 0;
    private int totalCategories = 0;
    private int newMoviesCount = 0;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        
        // Get all movies and categories
        var allMovies = await context.Movie.ToListAsync();
        categories = await context.Category.ToListAsync();
        
        // Calculate stats
        totalMovies = allMovies.Count;
        totalCategories = categories.Count;
        
        // Get new movies (last 30 days)
        var thirtyDaysAgo = DateTime.Now.AddDays(-30);
        newMovies = allMovies
            .Where(m => m.ReleaseDate >= thirtyDaysAgo)
            .OrderByDescending(m => m.ReleaseDate)
            .Take(8)
            .ToList();
        
        newMoviesCount = newMovies.Count;
        
        // If no recent movies, show latest 4 movies
        if (!newMovies.Any())
        {
            newMovies = allMovies
                .OrderByDescending(m => m.ReleaseDate)
                .Take(4)
                .ToList();
        }
    }

    private string GetCategoryName(int categoryId)
    {
        return categories.FirstOrDefault(c => c.Id == categoryId)?.Name ?? "Unknown";
    }

    private int GetMovieCountForCategory(int categoryId)
    {
        using var context = DbFactory.CreateDbContext();
        return context.Movie.Count(m => m.CategoryId == categoryId);
    }
}
