@page "/movies/details"
@using Microsoft.EntityFrameworkCore
@using MovieTheater.Models
@inject IDbContextFactory<DataContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Movie Details</h1>

<div class="container mx-auto p-6">
    @if (movie is null)
    {
        <div class="flex justify-center items-center h-64">
            <span class="loading loading-spinner loading-lg"></span>
            <span class="ml-4 text-lg">Loading...</span>
        </div>
    }
    else {
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Movie Information -->
            <div class="lg:col-span-2">
                <div class="card bg-base-100 shadow-xl">
                    <div class="card-body">
                        <h2 class="card-title text-3xl mb-4">@movie.Name</h2>
                        
                        <div class="space-y-4">
                            <div class="flex flex-col sm:flex-row">
                                <span class="font-semibold text-base-content/70 w-32">Release Date:</span>
                                <span class="text-base-content">@movie.ReleaseDate.ToString("MMMM dd, yyyy")</span>
                            </div>
                            
                            <div class="flex flex-col sm:flex-row">
                                <span class="font-semibold text-base-content/70 w-32">Director:</span>
                                <span class="text-base-content">@movie.Director</span>
                            </div>
                            
                            <div class="flex flex-col sm:flex-row">
                                <span class="font-semibold text-base-content/70 w-32">Language:</span>
                                <span class="badge badge-outline">@movie.Language</span>
                            </div>
                            
                            <div class="flex flex-col sm:flex-row">
                                <span class="font-semibold text-base-content/70 w-32">Category:</span>
                                <span class="badge badge-primary">@(category?.Name ?? "Unknown")</span>
                            </div>
                            
                            @if (!string.IsNullOrEmpty(movie.ContactEmail))
                            {
                                <div class="flex flex-col sm:flex-row">
                                    <span class="font-semibold text-base-content/70 w-32">Contact:</span>
                                    <a href="mailto:@movie.ContactEmail" class="link link-primary">@movie.ContactEmail</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Poster Section -->
            <div class="lg:col-span-1">
                <div class="card bg-base-100 shadow-xl">
                    <div class="card-body items-center text-center">
                        @if (!string.IsNullOrEmpty(movie.PosterPath))
                        {
                            <figure class="w-full max-w-sm">
                                <img src="@movie.PosterPath" alt="@movie.Name poster" 
                                     class="rounded-lg shadow-lg w-full h-auto max-h-96 object-cover" />
                            </figure>
                            <p class="text-sm text-base-content/60 mt-2">Movie Poster</p>
                        }
                        else
                        {
                            <div class="flex items-center justify-center w-48 h-72 bg-base-200 rounded-lg">
                                <div class="text-center">
                                    <svg class="w-12 h-12 mx-auto text-base-content/40 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    <span class="text-base-content/60">No Poster Available</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Action Buttons -->
        <div class="flex gap-4 mt-8">
            <a href="@($"/movies/edit?id={movie.Id}")" class="btn btn-primary">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                </svg>
                Edit Movie
            </a>
            <a href="/movies" class="btn btn-outline">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to List
            </a>
        </div>
    }
</div>

@code {
    private Movie? movie;
    private Category? category;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        movie = await context.Movie.FirstOrDefaultAsync(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
        else
        {
            // Load the category information
            category = await context.Category.FirstOrDefaultAsync(c => c.Id == movie.CategoryId);
        }
    }
}
