@page "/movies/details"
@using Microsoft.EntityFrameworkCore
@using MovieTheater.Models
@inject IDbContextFactory<DataContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Movie Details</h1>

<div>
    @if (movie is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <div class="row">
            <div class="col-md-8">
                <h2>@movie.Name</h2>
                <hr />
                <dl class="row">
                    <dt class="col-sm-3">Release Date</dt>
                    <dd class="col-sm-9">@movie.ReleaseDate.ToString("MMMM dd, yyyy")</dd>
                    
                    <dt class="col-sm-3">Director</dt>
                    <dd class="col-sm-9">@movie.Director</dd>
                    
                    <dt class="col-sm-3">Language</dt>
                    <dd class="col-sm-9">@movie.Language</dd>
                    
                    <dt class="col-sm-3">Category</dt>
                    <dd class="col-sm-9">@(category?.Name ?? "Unknown")</dd>
                    
                    @if (!string.IsNullOrEmpty(movie.ContactEmail))
                    {
                        <dt class="col-sm-3">Contact Email</dt>
                        <dd class="col-sm-9">
                            <a href="mailto:@movie.ContactEmail">@movie.ContactEmail</a>
                        </dd>
                    }
                </dl>
            </div>
            <div class="col-md-4">
                @if (!string.IsNullOrEmpty(movie.PosterPath))
                {
                    <div class="text-center">
                        <img src="@movie.PosterPath" alt="@movie.Name poster" 
                             class="img-fluid" style="max-width: 300px; max-height: 450px; object-fit: cover; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" />
                        <p class="mt-2 text-muted small">Movie Poster</p>
                    </div>
                }
                else
                {
                    <div class="text-center">
                        <div class="bg-light d-flex align-items-center justify-content-center" 
                             style="width: 200px; height: 300px; border-radius: 8px; margin: 0 auto;">
                            <span class="text-muted">No Poster Available</span>
                        </div>
                    </div>
                }
            </div>
        </div>
        
        <hr />
        <div class="mt-4">
            <a href="@($"/movies/edit?id={movie.Id}")" class="btn btn-primary">Edit</a>
            <a href="/movies" class="btn btn-secondary ms-2">Back to List</a>
        </div>
    }
</div>

@code {
    private Movie? movie;
    private Category? category;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        movie = await context.Movie.FirstOrDefaultAsync(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
        else
        {
            // Load the category information
            category = await context.Category.FirstOrDefaultAsync(c => c.Id == movie.CategoryId);
        }
    }
}
