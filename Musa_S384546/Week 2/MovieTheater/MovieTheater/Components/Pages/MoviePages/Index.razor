@page "/movies"
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.EntityFrameworkCore
@using MovieTheater.Models
@implements IAsyncDisposable
@inject IDbContextFactory<DataContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="movies/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Movie">
    <PropertyColumn Property="movie => movie.Name" />
    <PropertyColumn Property="movie => movie.ReleaseDate" />
    <PropertyColumn Property="movie => movie.Director" />
    <PropertyColumn Property="movie => movie.ContactEmail" />
    <PropertyColumn Property="movie => movie.Language" />
    <TemplateColumn Title="Poster" Context="movie">
        @if (!string.IsNullOrEmpty(movie.PosterPath))
        {
            <img src="@movie.PosterPath" alt="@movie.Name poster" style="width: 50px; height: 75px; object-fit: cover;" />
        }
        else
        {
            <span class="text-muted">No image</span>
        }
    </TemplateColumn>

    <TemplateColumn Context="movie">
        <a href="@($"movies/edit?id={movie.Id}")">Edit</a> |
        <a href="@($"movies/details?id={movie.Id}")">Details</a> |
        <a href="@($"movies/delete?id={movie.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private DataContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
